repeat wait(0.1) until game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer.Character

local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/MQPS7/SOMTANK-UI-OpenSrc/refs/heads/main/V1"))()

TweenService = game:GetService("TweenService")
RunService = game:GetService("RunService")
Lighting = game:GetService("Lighting")
replicatedStorage = game:GetService("ReplicatedStorage")
UIS = game:GetService("UserInputService")
player = game.Players.LocalPlayer
character = player.Character
humanoid = character:FindFirstChildOfClass("Humanoid")
HMNRT = character:FindFirstChild("HumanoidRootPart")
Camera = workspace.CurrentCamera
screenSize = Camera.ViewportSize
plrGui = player.PlayerGui

local ScreenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
UiIs_Close = false

local function MakeDraggableButton(button: ImageButton, MoveFrame)
	local dragging = false;	local dragStart
	local startPos;	local firstPos
	button.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			Icon_Position = button.Position
			startPos = MoveFrame.Position
			if not firstPos then
				firstPos = MoveFrame.Position
			end
		end
	end)
	UIS.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
			local delta = input.Position - dragStart
			MoveFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)
end
local function MakeImageButton(Parent, Size, Posi, BGtran, Color, Imtran, imageID)
	local NewFrame = Instance.new("ImageButton", Parent)
	local UICorner = Instance.new("UICorner", NewFrame)
	NewFrame.Position = Posi
	NewFrame.Size = Size
	NewFrame.BackgroundTransparency = BGtran
	NewFrame.Image = imageID or ""
	NewFrame.ImageTransparency = Imtran
	NewFrame.BackgroundColor3 = Color
	NewFrame.ImageColor3 = Color
	NewFrame.ZIndex = 2
	return NewFrame
end
local MoveIcon = MakeImageButton(ScreenGui, UDim2.new(0, 53,0, 51), UDim2.new(0.100, 0,0.447, 0), 1, Color3.new(1, 1, 1), 0, "rbxassetid://81129676934693")
local FOR_MoveIcon = Instance.new("UIAspectRatioConstraint", MoveIcon)
MakeDraggableButton(MoveIcon, MoveIcon)
MoveIcon.Activated:Connect(function()
	if Icon_Position == MoveIcon.Position then
		vim:SendKeyEvent(true, Enum.KeyCode.Insert, false, game)
		UiIs_Close = true
		task.wait(0.05)
		vim:SendKeyEvent(false, Enum.KeyCode.Insert, false, game)
	end
end)

--- EXAMPLE !!!

function gradient(text, startColor, endColor)
	local result = ""
	local length = #text

	for i = 1, length do
		local t = (i - 1) / math.max(length - 1, 1)
		local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
		local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
		local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)

		local char = text:sub(i, i)
		result = result .. "<font color=\"rgb(" .. r ..", " .. g .. ", " .. b .. ")\">" .. char .. "</font>"
	end

	return result
end

local Window = WindUI:CreateWindow({
	Title = "Somtank",
	Icon = "rbxassetid://80019916158199",
	IconThemed = true,
	Author = "v0.0.1",
	Folder = "Somtank",
	Size = UDim2.fromOffset(460, 320),
	Transparent = true,
	Theme = "Violet",
	User = {
		Enabled = true,
		Callback = function() end,
		Anonymous = false
	},
	SideBarWidth = 200,
	ScrollBarEnabled = true,
})

if getgenv().MainButton677 then
	getgenv().MainButton677:Destroy()
	getgenv().MainButton677 = ScreenGui
else
	getgenv().MainButton677 = ScreenGui
end

Window:EditOpenButton({
	Title = "Open Example UI",
	Icon = "monitor",
	CornerRadius = UDim.new(0,16),
	StrokeThickness = 2,
	Color = ColorSequence.new(Color3.fromHex("FF0F7B"),Color3.fromHex("F89B29")),
	Enabled = false,
	Draggable = true,
})

local Tabs = {}

do
	Tabs.Player = Window:Section({
		Title = "กลุ่ม 1",
		Opened = true,
	})
	
	Tabs.Mode1 = Tabs.Player:Tab({ Title = "หมวด 1", Icon = "rbxassetid://2795572800" })
	
	--Tabs.Mode2 = Tabs.Player:Tab({ Title = "ฟาร์ม", Icon = "rbxassetid://9008236330" })
	
end

Window:SelectTab(1)

local function tweenPart(fromPart, toPart, time, easingStyle, offset)
	local targetCFrame = toPart.CFrame
	if offset then
		targetCFrame = (toPart.CFrame * CFrame.new(offset.X, offset.Y, offset.Z))
	end
	local tweenInfo = TweenInfo.new(time,Enum.EasingStyle[easingStyle],Enum.EasingDirection.Out)
	local tween = TweenService:Create(fromPart, tweenInfo, {CFrame = targetCFrame})
	tween:Play()
end

local function Click_Function(centerX, centerY)
	vim:SendMouseButtonEvent(centerX, centerY, 0, true, game, 0)
	wait(0.02)
	vim:SendMouseButtonEvent(centerX, centerY, 0, false, game, 0)
	wait(0.02)
end

local function matchesAllowedKeyword(value, allowedKeywords)
	value = value:lower()
	for _, keyword in ipairs(allowedKeywords) do
		if string.find(value, keyword:lower()) then
			return true
		end
	end
	return false
end

local PlayerCharacter = nil
for _, descendant in pairs(workspace:GetDescendants()) do
	if descendant.Name == "Username" and descendant.Text == game.Players.LocalPlayer.Name then
		PlayerCharacter = descendant.Parent.Parent.Parent
	end
end
task.spawn(function()
	while true do
		task.wait(3)
		for _, descendant in pairs(workspace:GetDescendants()) do
			if descendant.Name == "Username" and descendant.Text == game.Players.LocalPlayer.Name then
				PlayerCharacter = descendant.Parent.Parent.Parent
			end
		end
	end
end)

WalkSpeedSet = 16
Tabs.Mode1:Slider({
	Title = "ความเร็วการเดิน",
	Value = {
		Min = 0,
		Max = 200,
		Default = WalkSpeedSet,
	},
	Callback = function(value) 
		WalkSpeedSet = tonumber(value)
	end
})

RunService.RenderStepped:Connect(function()
	pcall(function()
		game.Players.LocalPlayer.Character.ControllerManager.GroundController.MoveSpeedFactor = (WalkSpeedSet / 10)
	end)
end)

EnvironmentalAssets = nil

if getgenv().EnvironmentalAssets then
	EnvironmentalAssets = getgenv().EnvironmentalAssets
else
	EnvironmentalAssets = workspace:WaitForChild("EnvironmentalAssets")
	getgenv().EnvironmentalAssets = EnvironmentalAssets
end

OpenForset = true
Tabs.Mode1:Toggle({
	Title = "ปิดป่า",
	Value = true,
	Callback = function(state) 
		OpenForset = state
		if EnvironmentalAssets then
			if OpenForset == true then
				EnvironmentalAssets.Parent = workspace
			else
				EnvironmentalAssets.Parent = replicatedStorage
			end
		end
	end
})

BringFood = false
Tabs.Mode1:Toggle({
	Title = "ดึงอาหาร",
	Value = false,
	Callback = function(state) 
		BringFood = state
	end
})

BringSpeed = 10
Tabs.Mode1:Slider({
	Title = "ความเร็วการวาร์ป",
	Value = {
		Min = 0,
		Max = 100,
		Default = 10,
	},
	Callback = function(value) 
		BringSpeed = tonumber(value)
	end
})

task.spawn(function()
	local FoodCheckRadius = 50
	while true do
		pcall(function()
			task.wait(0.5)
			if BringFood then
				for _, obj in pairs(workspace:GetChildren()) do
					if string.find(obj.Name, "Meat") and BringFood then
						local meatPart = obj:FindFirstChildWhichIsA("BasePart")
						if meatPart then
							local safeToWarp = true
							for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
								if otherPlayer ~= player and otherPlayer.Character and BringFood then
									local radiusPart = otherPlayer.Character:FindFirstChild("FoodCollectionRadius")
									if radiusPart then
										if (meatPart.Position - radiusPart.Position).Magnitude <= FoodCheckRadius then
											safeToWarp = false
											break
										end
									end
								end
							end
							if safeToWarp then
								PlayerCharacter.FoodCollectionRadius.CFrame = meatPart.CFrame
							end
							wait(1 / BringSpeed)
						end
					end
				end
			end
		end)
	end
end)

-- Configuration / Optional

local HttpService = game:GetService("HttpService")

local folderPath = "WindUI"
makefolder(folderPath)

local function SaveFile(fileName, data)
	local filePath = folderPath .. "/" .. fileName .. ".json"
	local jsonData = HttpService:JSONEncode(data)
	writefile(filePath, jsonData)
end

local function LoadFile(fileName)
	local filePath = folderPath .. "/" .. fileName .. ".json"
	if isfile(filePath) then
		local jsonData = readfile(filePath)
		return HttpService:JSONDecode(jsonData)
	end
end

local function ListFiles()
	local files = {}
	for _, file in ipairs(listfiles(folderPath)) do
		local fileName = file:match("([^/]+)%.json$")
		if fileName then
			table.insert(files, fileName)
		end
	end
	return files
end

local themeValues = {}
for name, _ in pairs(WindUI:GetThemes()) do
	table.insert(themeValues, name)
end

local filesDropdown
local files = ListFiles()

local currentThemeName = WindUI:GetCurrentTheme()
local themes = WindUI:GetThemes()

local ThemeAccent = themes[currentThemeName].Accent
local ThemeOutline = themes[currentThemeName].Outline
local ThemeText = themes[currentThemeName].Text
local ThemePlaceholderText = themes[currentThemeName].Placeholder

function updateTheme()
	WindUI:AddTheme({
		Name = currentThemeName,
		Accent = ThemeAccent,
		Outline = ThemeOutline,
		Text = ThemeText,
		Placeholder = ThemePlaceholderText
	})
	WindUI:SetTheme(currentThemeName)
end

local InviteCode = "ApbHXtAwU2"
local DiscordAPI = "https://discord.com/api/v10/invites/" .. InviteCode .. "?with_counts=true&with_expiration=true"

local Response = game:GetService("HttpService"):JSONDecode(WindUI.Creator.Request({
	Url = DiscordAPI,
	Method = "GET",
	Headers = {
		["User-Agent"] = "RobloxBot/1.0",
		["Accept"] = "application/json"
	}
}).Body)

Tabs.Mode1:Keybind({
	Title = "ปุ่มเปิดปิดหน้าต่าง",
	Desc = "สามารถเซ้ทได้",
	Value = "Insert",
	Callback = function(v)
		Window:SetToggleKey(Enum.KeyCode[v])
	end
})

local function parseJSON(luau_table, indent, level, visited)
	indent = indent or 2
	level = level or 0
	visited = visited or {}

	local currentIndent = string.rep(" ", level * indent)
	local nextIndent = string.rep(" ", (level + 1) * indent)

	if luau_table == nil then
		return "null"
	end

	local dataType = type(luau_table)

	if dataType == "table" then
		if visited[luau_table] then
			return "\"[Circular Reference]\""
		end

		visited[luau_table] = true

		local isArray = true
		local maxIndex = 0

		for k, _ in pairs(luau_table) do
			if type(k) == "number" and k > maxIndex then
				maxIndex = k
			end
			if type(k) ~= "number" or k <= 0 or math.floor(k) ~= k then
				isArray = false
				break
			end
		end

		local count = 0
		for _ in pairs(luau_table) do
			count = count + 1
		end
		if count ~= maxIndex and isArray then
			isArray = false
		end

		if count == 0 then
			return "{}"
		end

		if isArray then
			if count == 0 then
				return "[]"
			end

			local result = "[\n"

			for i = 1, maxIndex do
				result = result .. nextIndent .. parseJSON(luau_table[i], indent, level + 1, visited)
				if i < maxIndex then
					result = result .. ","
				end
				result = result .. "\n"
			end

			result = result .. currentIndent .. "]"
			return result
		else
			local result = "{\n"
			local first = true

			local keys = {}
			for k in pairs(luau_table) do
				table.insert(keys, k)
			end
			table.sort(keys, function(a, b)
				if type(a) == type(b) then
					return tostring(a) < tostring(b)
				else
					return type(a) < type(b)
				end
			end)

			for _, k in ipairs(keys) do
				local v = luau_table[k]
				if not first then
					result = result .. ",\n"
				else
					first = false
				end

				if type(k) == "string" then
					result = result .. nextIndent .. "\"" .. k .. "\": "
				else
					result = result .. nextIndent .. "\"" .. tostring(k) .. "\": "
				end

				result = result .. parseJSON(v, indent, level + 1, visited)
			end

			result = result .. "\n" .. currentIndent .. "}"
			return result
		end
	elseif dataType == "string" then
		local escaped = luau_table:gsub("\\", "\\\\")
		escaped = escaped:gsub("\"", "\\\"")
		escaped = escaped:gsub("\n", "\\n")
		escaped = escaped:gsub("\r", "\\r")
		escaped = escaped:gsub("\t", "\\t")

		return "\"" .. escaped .. "\""
	elseif dataType == "number" then
		return tostring(luau_table)
	elseif dataType == "boolean" then
		return luau_table and "true" or "false"
	elseif dataType == "function" then
		return "\"function\""
	else
		return "\"" .. dataType .. "\""
	end
end

local function tableToClipboard(luau_table, indent)
	indent = indent or 4
	local jsonString = parseJSON(luau_table, indent)
	setclipboard(jsonString)
	return jsonString
end


-- 1. Load ConfigManager
local ConfigManager = Window.ConfigManager


-- 2. Create Config File                    ↓ Config File name
local myConfig = ConfigManager:CreateConfig("myConfig")


-- 3. Register elements

--               | ↓ Element name (no spaces)  | ↓ Element          |
myConfig:Register( "toggleNameExample",          ToggleElement      )
myConfig:Register( "sliderNameExample",          SliderElement      ) 
myConfig:Register( "keybindNameExample",         KeybindElement     )
myConfig:Register( "dropdownNameExample",        DropdownElement    )
myConfig:Register( "inputNameExample",           InputElement       )
myConfig:Register( "ColorpickerNameExample",     ColorpickerElement )



Window:OnClose(function()
	UiIs_Close = false
end)
